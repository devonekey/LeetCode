class Solution {
    companion object {
        @JvmStatic
        fun main(args: Array<String>) {
            println(maxSubArray(nums = intArrayOf(-2, 1, -3, 4, -1, 2, 1, -5, 4)))
            println(maxSubArray(nums = intArrayOf(-1)))
            println(maxSubArray(nums = intArrayOf(-2, -1)))
            println(maxSubArray(nums = intArrayOf(1)))
        }

        fun maxSubArray(nums: IntArray): Int {
            val dp = IntArray(nums.size)
            var max = Int.MIN_VALUE

            for (i in nums.indices) {
                dp[i] = Math.max(dp[if (i > 0) i - 1 else 0] + nums[i], nums[i])
                max = Math.max(max, dp[i])
            }

            return max
        }
    }
}